dataset:
  # 'NCaltech101' or 'NCaltech101_ObjectDetection', 'Prophesee', 'NCars', 'N_AU_DR'
  name: 'Prophesee'
  event_representation: 'histogram'  # ['histogram', 'event_queue']
  ncaltech101:
    dataset_path: "/media/kristoffer/Elements/Datasets/NCaltech101"
    # Single classes e.g. ['anchor', 'helicopter', 'Motorbikes'] or 'all' for all classes
    object_classes: 'all'
    height: 180
    width: 240
    nr_events_window: 50000
  ncaltech101_objectdetection:
    dataset_path: "/media/kristoffer/Elements/Datasets/NCaltech_object_det"
    object_classes: 'all'
    height: 180
    width: 240
    nr_events_window: 25000
  prophesee:
    dataset_path: "/media/kristoffer/Elements/Datasets/PropheseeG1"
    #dataset_path: "data/PropheseeG1"
    object_classes: 'all'
    height: 240
    width: 304
    nr_events_window: 25000
  n_au_dr:
    dataset_path: "/media/kristoffer/Elements/Datasets/N-AU-DR"
    object_classes: 'all'
    height: 180
    width: 240
    nr_events_window: 25000

dir:
  log: 'log/'
model:
  # ['fb_sparse_vgg', 'dense_vgg', 'fb_sparse_object_det', 'dense_object_det', 'sparse_gatenet']
  model_name: 'fb_sparse_object_det'
optim:
  batch_size: 15
  init_lr: 1e-4
  # Set to "steps: ~" if no scheduler is needed
  steps_lr: [500, 1000, 1500]
  factor_lr: 0.1
checkpoint:
  resume_training: False
  resume_file: ''
  # Networks trained for classification can be reused as starting point for object detection networks on trained
  # the same dataset
  use_pretrained: False
  pretrained_dense_vgg: ''
  pretrained_sparse_vgg: 'log/trained-NCaltech/checkpoints/model_step_25.pth'
hardware:
  # num_cpu_workers: {-1: auto, 0: main thread, >0: ...}
  num_cpu_workers: -1
  gpu_device: 0  # [0 or 'cpu']
